<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jbz.mapper.RoleMapper">
    <!-- 支持缓存配置 -->
    <cache type="com.jbz.utils.RedisCache"/>
    <!--封装结果集-->
    <resultMap id="roleMap" type="com.jbz.domain.Role">
        <result column="roleId" property="id"/>
        <result column="roleName" property="roleName"/>
        <result column="roleDesc" property="roleDesc"/>
        <result column="permissionNames" property="permissionNames"/>
    </resultMap>
    <select id="queryAllRole" resultMap="roleMap" parameterType="string">
        select r.id as roleId, r.roleName, r.roleDesc, group_concat(p.permissionName) as permissionNames
        from role r
        left join role_permission rp on r.id = rp.roleId
        left join permission p on p.id = rp.permissionId
        <where>
            <if test="roleDesc != null and roleDesc != '' ">
                r.roleDesc like concat('%',#{roleDesc},'%')
            </if>
        </where>
        group by r.id
    </select>
    <!--新增-->
    <insert id="addRole" parameterType="com.jbz.domain.Role" useGeneratedKeys="true" keyProperty="id">
        insert into role
        values (#{id}, #{roleName}, #{roleDesc})
    </insert>
    <!--根据id查询角色-->
    <!--封装结果集-->
    <resultMap id="role" type="com.jbz.domain.Role">
        <result column="roleId" property="id"/>
        <result column="roleName" property="roleName"/>
        <result column="roleDesc" property="roleDesc"/>
        <collection property="permissions" ofType="com.jbz.domain.Permission">
            <id column="permissionId" property="id"/>
        </collection>
    </resultMap>
    <select id="queryRoleById" resultMap="role" parameterType="int">
        select r.id as roleId, r.roleName, r.roleDesc, p.id as permissionId
        from role r
                 left join role_permission rp on r.id = rp.roleId
                 left join permission p on p.id = rp.permissionId
        where r.id = #{id}
    </select>
    <!--批量删除-->
    <delete id="batchDeleteRoleByIds" parameterType="arraylist">
        delete
        from role
        where id in
        <foreach collection="array" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>